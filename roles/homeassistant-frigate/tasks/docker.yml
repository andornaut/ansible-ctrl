---
- name: Get group ids
  getent:
    database: group

- name: Copy docker-ble-policy
  ansible.builtin.copy:
    src: homeassistant/docker-ble-policy
    dest: /etc/apparmor.d/
    owner: root
    group: root
    mode: "0644"
  register: apparmor_policy
  become: true

- name: Load docker-ble-policy
  ansible.builtin.shell: apparmor_parser -r -W /etc/apparmor.d/docker-ble-policy
  become: true
  when: apparmor_policy.changed

# Shouldn't need to reload if we're loading the new profile above
#- name: Reload apparmor.service
#  ansible.builtin.systemd_service:
#    name: apparmor.service
#    state: restarted
#  when: apparmor_policy.changed
#  become: true

- name: Start Home Assistant Docker containers
  vars:
    required_volumes:
      - "{{ homeassistantfrigate_required_volumes.config }}:/config"
      - "{{ homeassistantfrigate_required_volumes.dbus }}:/run/dbus:ro"
      - "{{ homeassistantfrigate_required_volumes.localtime }}:/etc/localtime:ro"
      - "{{ homeassistantfrigate_required_volumes.timezone }}:/etc/timezone:ro"
      - "{{ homeassistantfrigate_required_volumes.udev }}:/run/udev:ro"
    frigate_volumes:
      - "{{ homeassistantfrigate_required_volumes.localtime }}:/etc/localtime:ro"
      - "{{ homeassistantfrigate_required_volumes.timezone }}:/etc/timezone:ro"
      - "{{ homeassistantfrigate_frigate_required_volumes.config }}:/config"
      - "{{ homeassistantfrigate_frigate_required_volumes.media }}:/media/frigate"
    frigate_tmpfs_volume:
      type: tmpfs # Optional ram-drive to reduce storage wear
      target: /tmp/cache
      tmpfs:
        size: "{{ homeassistantfrigate_frigate_tmpfs_size_mb * 1024 * 1024 }}"
    mosquitto_volumes:
      - "{{ homeassistantfrigate_required_volumes.localtime }}:/etc/localtime:ro"
      - "{{ homeassistantfrigate_required_volumes.timezone }}:/etc/timezone:ro"
      - "{{ homeassistantfrigate_mosquitto_required_volumes.config }}:/mosquitto/config:ro"
      - "{{ homeassistantfrigate_mosquitto_required_volumes.data }}:/mosquitto/data"
      - "{{ homeassistantfrigate_mosquitto_required_volumes.log }}:/mosquitto/log"
    openwakeword_volumes:
      - "{{ homeassistantfrigate_required_volumes.localtime }}:/etc/localtime:ro"
      - "{{ homeassistantfrigate_required_volumes.timezone }}:/etc/timezone:ro"
      - "{{ homeassistantfrigate_openwakeword_required_volumes.data }}:/custom"
    piper_volumes:
      - "{{ homeassistantfrigate_required_volumes.localtime }}:/etc/localtime:ro"
      - "{{ homeassistantfrigate_required_volumes.timezone }}:/etc/timezone:ro"
      - "{{ homeassistantfrigate_piper_required_volumes.data }}:/data"
    whisper_volumes:
      - "{{ homeassistantfrigate_required_volumes.localtime }}:/etc/localtime:ro"
      - "{{ homeassistantfrigate_required_volumes.timezone }}:/etc/timezone:ro"
      - "{{ homeassistantfrigate_whisper_required_volumes.data }}:/data"
  community.docker.docker_compose_v2:
    project_name: homeassistant-frigate
    pull: always
    definition:
      services:
        homeassistant:
          container_name: homeassistant
          image: "{{ homeassistantfrigate_docker_image }}"
          devices: "{{ homeassistantfrigate_devices }}"
          # `network_mode: host` is required by the Google Cast integration:
          # https://www.home-assistant.io/integrations/cast/#home-assistant-container
          network_mode: host
          # May improve bluetooth experience, though it should not be necessary due to the apparmor:docker-ble-policy below
          #privileged: true
          restart: unless-stopped
          # Apply this Apparmor policy (installed above) to allow the container to access bluetooth via dbus-broker
          security_opt:
            - "apparmor:docker-ble-policy"
          # TODO Or use "=" instead of ":" as the key-value separator as per Ansible docs?
          #- "apparmor=docker-ble-policy"
          # Test with: `sudo aa-status|grep docker-ble-policy`
          volumes: "{{ required_volumes + homeassistantfrigate_extra_volumes }}"
        frigate:
          container_name: frigate
          image: "{{ homeassistantfrigate_frigate_docker_image }}"
          devices: "{{ homeassistantfrigate_frigate_devices }}"
          environment: "{{ homeassistantfrigate_frigate_env }}"
          group_add:
            - "{{ getent_group.render[1] }}"
            - "{{ getent_group.video[1] }}"
          ports:
            - "{{ homeassistantfrigate_frigate_port }}:5000"
            - "{{ homeassistantfrigate_frigate_rtsp_port }}:1935"
            # RTSP restream https://docs.frigate.video/configuration/restream/
            - "8554:8554/tcp"
            - "8555:8555/tcp" # WebRTC over TCP
            - "8555:8555/udp" # WebRTC over UDP
          # *Disabled for security reasons*
          # Fix error: Unable to poll intel GPU stats: Failed to initialize PMU! (Operation not permitted)
          # https://github.com/blakeblackshear/frigate/issues/6028#issuecomment-1506283282
          #privileged: true
          restart: unless-stopped
          shm_size: "{{ homeassistantfrigate_frigate_shm_size }}"
          volumes: "{{ frigate_volumes + ([frigate_tmpfs_volume] if homeassistantfrigate_frigate_tmpfs_size_mb > 0 else []) }}"
        mosquitto:
          container_name: mosquitto
          image: "{{ homeassistantfrigate_mosquitto_docker_image }}"
          ports:
            - "{{ homeassistantfrigate_mosquitto_port }}:1883"
          volumes: "{{ mosquitto_volumes }}"
        # Voice Preview (hardware) uses microWakeWord, not openWakeWord
        #        openwakeword:
        #          container_name: openwakeword
        #          image: "{{ homeassistantfrigate_openwakeword_docker_image }}"
        #          command: --custom-model-dir /custom --preload-model 'ok_nabu'
        #          ports:
        #            - "{{ homeassistantfrigate_openwakeword_port }}:10400"
        #          restart: unless-stopped
        #          volumes: "{{ openwakeword_volumes }}"
        piper:
          container_name: piper
          image: rhasspy/wyoming-piper
          command: --voice en_US-amy-medium
          ports:
            - "{{ homeassistantfrigate_piper_port }}:10200"
          restart: unless-stopped
          volumes: "{{ piper_volumes }}"
        whisper:
          container_name: whisper
          image: rhasspy/wyoming-whisper
          command: --model distil-small.en --language en
          ports:
            - "{{ homeassistantfrigate_whisper_port }}:10300"
          restart: unless-stopped
          volumes: "{{ whisper_volumes }}"
