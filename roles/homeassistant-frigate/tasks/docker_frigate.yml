---
- name: Remove Frigate container if it exists
  community.docker.docker_container:
    name: frigate
    state: absent
  ignore_errors: true

- name: Start Frigate Docker container
  notify: restart homeassistant
  vars:
    frigate_base_volumes:
      - "{{ homeassistantfrigate_frigate_required_volumes.config }}:/config"
      - "{{ homeassistantfrigate_frigate_required_volumes.media }}:/media/frigate"
    frigate_volumes: "{{ common_volumes + frigate_base_volumes }}"

    frigate_tmpfs_volume:
      type: tmpfs # Optional ram-drive to reduce storage wear
      target: /tmp/cache
      tmpfs:
        size: "{{ homeassistantfrigate_frigate_tmpfs_size_mb * 1024 * 1024 }}"
    frigate_env: "{{ homeassistantfrigate_frigate_env | default({}) | combine({'TZ': TZ}) }}"

  community.docker.docker_compose_v2:
    project_name: homeassistantfrigate-frigate
    pull: always
    remove_orphans: true
    definition:
      networks: "{{ external_network }}"
      services:
        frigate:
          # http://frigate:5000
          container_name: frigate
          image: "{{ homeassistantfrigate_frigate_docker_image }}"
          devices: "{{ homeassistantfrigate_frigate_devices }}"
          environment: "{{ frigate_env }}"
          group_add:
            - "{{ getent_group.render[1] }}"
            - "{{ getent_group.video[1] }}"
          logging: "{{ default_logging }}"
          mem_limit: "{{ homeassistantfrigate_frigate_memory }}"
          # Docs:
          # https://docs.docker.com/reference/compose-file/services/#memswap_limit
          # > If memswap_limit is set to the same value as memory, and memory
          # > is set to a positive integer, the container does not have
          # > access to swap.
          memswap_limit: "{{ homeassistantfrigate_frigate_memory_swap | default(homeassistantfrigate_frigate_memory) }}"
          ports:
            - "{{ homeassistantfrigate_frigate_port_http_authenticated }}:8971"
            - "{{ homeassistantfrigate_frigate_port_http_unauthenticated }}:5000"
            # RTSP restream https://docs.frigate.video/configuration/restream/
            - "{{ homeassistantfrigate_frigate_port_rtsp }}:8554"
            # WebRTC
            - "{{ homeassistantfrigate_frigate_port_webrtc }}:8555/tcp"
            - "{{ homeassistantfrigate_frigate_port_webrtc }}:8555/udp"
          restart: unless-stopped
          # https://docs.docker.com/reference/cli/docker/container/run/#security-opt
          # https://docs.docker.com/engine/security/seccomp/#run-without-the-default-seccomp-profile
          security_opt:
            - seccomp=unconfined
          shm_size: "{{ homeassistantfrigate_frigate_shm_size }}"
          volumes: "{{ frigate_volumes + ([frigate_tmpfs_volume] if homeassistantfrigate_frigate_tmpfs_size_mb > 0 else []) }}"

- name: Get Frigate container info
  community.docker.docker_container_info:
    name: frigate
  register: frigate_info

- name: Update /etc/hosts with Frigate container IP
  lineinfile:
    path: /etc/hosts
    regexp: '^\S+\s+frigate'
    line: "{{ frigate_info.container.NetworkSettings.Networks[homeassistantfrigate_docker_network_name].IPAddress }} frigate"
  become: true
  no_log: true # The CLI output would be too verbose without no_log
