#!/bin/bash

set -e

[[ ${EUID} -eq 0 ]] || { echo 'Must be run as root'>&2; exit 1; }

RETENTION="{{ nas_backup_directories_retention }}"

if [[ $# -eq 4 ]]; then
    name="${1}"
    device="${2}"
    key_file="${3}"
    backup_dir="${4}"
elif [[ $# -eq 0 ]]; then
    name=nas-backup
    device="{{ nas_device_backup }}"
    key_file="{{ nas_key_file }}"
    backup_dir="{{ nas_backup_directory }}"
else
    echo "Usage: $(basename "${0}") luksName /dev/sda /luks/key/file /media/nas/backups">&2
    exit 1
fi

[[ -d "${backup_dir}" ]] || { echo "Backup dir does not exist: ${backup_dir}">&2; exit 1; }

echo "Device: ${device}"
echo "Backup dir: ${backup_dir}"

openluks "${name}" "${device}" "${key_file}"

if mount_dir="$(findmnt -rno TARGET "/dev/mapper/${name}")"; then
    # It may be mounted to multiple mount points, so take the first one.
    mount_dir="$(echo -n "${mount_dir}"|head -1)"
else
    mount_dir="$(mktemp -d)"
    mount /dev/mapper/${name} ${mount_dir}
fi
echo "Mount dir: ${mount_dir}"

# eg. /tmp/tmp.xxx/backup.2018-12-30
target_dir="${mount_dir}/$(date -d @$(stat --format=%Y "${backup_dir}") +backup.%Y-%m-%d)"
echo "Target dir: ${target_dir}"

mkdir -p "${target_dir}"

echo "Deleting backups older than the ${RETENTION} most recent"
ls -1p "${mount_dir}" | \
    grep -P '^backup\.\d{4}-\d{2}-\d{2}/$' | \
    head -n-${RETENTION} | \
    xargs -I {} rm -rf -- "${mount_dir}/{}"

echo "Starting backup"
rsync --archive --delete --human-readable "${backup_dir}" "${target_dir}"

tree -L 2 "${mount_dir}"

closeluks ${name}
