#!/bin/bash

set -eu -o nounset

[[ ${EUID} -eq 0 ]] || { echo 'Must be run as root'>&2; exit 1; }

RETENTION_NUMBER="{{ nas_backup_directories_retention }}"
RETRY_SECS=10

if [[ $# -eq 0 ]]; then
    name=nasbackup
    sourceDir="{{ nas_backup_directory }}"
elif [[ $# -eq 2 ]]; then
    name="${1}"
    sourceDir="${2}"
else
    echo "Usage: $(basename "${0}") nasbackup /media/nas/backups">&2
    exit 1
fi

[[ -d "${sourceDir}" ]] || { echo "Backup dir does not exist: ${sourceDir}">&2; exit 1; }

closeLuks() {
    mount_dirs="$(findmnt -rno TARGET "/dev/mapper/${name}")" || true
    if [[ -n "${mount_dirs}" ]]; then
        echo "Unmounting: ${mount_dirs}"
        for mountDir in "${mount_dirs}"; do
        if ! umount "${mountDir}"; then
            echo "Sleeping for ${RETRY_SECS} seconds"
            sleep ${RETRY_SECS}
            umount "${mountDir}"
        fi
        done
    fi
    cryptdisks_stop ${name}
}

openLuks() {
    cryptsetup status ${name}>/dev/null || cryptdisks_start ${name}
}

openLuks

mount "/dev/mapper/${name}" || true
if mountDir="$(findmnt -rno TARGET "/dev/mapper/${name}")"; then
    # It may be mounted to multiple mount points, so take the first one.
    mountDir="$(echo -n "${mountDir}"|head -1)"
fi

# eg. /media/nasbackup/backup.2020-04-30
destDir="${mountDir}/$(date -d @$(stat --format=%Y "${sourceDir}") +backup.%Y-%m-%d)"
echo "Device mounted to: ${mountDir}"
echo "Backup source: ${sourceDir}"
echo "Backup destination: ${destDir}"
echo ---

mkdir -p "${destDir}"

echo Deleting backups older than the last ${RETENTION_NUMBER}
ls -1p "${mountDir}" | \
    grep -P '^backup\.\d{4}-\d{2}-\d{2}/$' | \
    head -n-${RETENTION_NUMBER} | \
    xargs -I {} rm -rf -- "${mountDir}/{}"

echo "Starting backup..."
rsync --archive --delete --human-readable --info=progress2 "${sourceDir}" "${destDir}"
closeLuks

echo ---
tree -L 2 "${mountDir}"
echo \# How to mount:
echo cryptdisks_start ${name}
echo mount ${mountDir}
echo \# How to unmount:
echo umount ${mountDir}
echo cryptdisks_stop ${name}
